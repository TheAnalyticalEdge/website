{
  "hash": "9d753e6624f1b31c9483437ca72001ad",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Example Case Study\"\ndescription: \"Some example case study description. This appears under the title, and is also on the listings page.\"\nauthor:\n  - name: Nicholas Tierney\n    url: https://www.njtierney.com\n    # orcid: 0000-XXXX-XXXX-XXXX\n    affiliation: Outside Analytics\ncategories: [R, missing-data, ecology, fisheries, acoustics, engineering, medical-research] # self-defined categories\n# citation: \n  # url: https://theanalyticaledge.com/case-studies/2024-04-14-example-case-study/ \nimage: example-image.png\ndraft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nexecute: \n  freeze: true\n---\n\n\nHere's some example text for this case study\n\nThis is a quarto document, so you can include any normal R (or Python, or Julia, or more!) code in here.\n\nEquations are supported\n\n$$\nPr(\\theta|y) = \\frac{Pr(y|\\theta)Pr(\\theta)}{\\Pr(y)}\n$$\n\nHere's some code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nterra 1.7.78\n```\n\n\n:::\n\n```{.r .cell-code}\nraster_file <- system.file(\"ex/elev.tif\", package = \"terra\") |> rast()\nraster_file\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 90, 95, 1  (nrow, ncol, nlyr)\nresolution  : 0.008333333, 0.008333333  (x, y)\nextent      : 5.741667, 6.533333, 49.44167, 50.19167  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (EPSG:4326) \nsource      : elev.tif \nname        : elevation \nmin value   :       141 \nmax value   :       547 \n```\n\n\n:::\n\n```{.r .cell-code}\nvector_file <- system.file(\"ex/lux.shp\", package = \"terra\") |> vect()\nvector_file\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n class       : SpatVector \n geometry    : polygons \n dimensions  : 12, 6  (geometries, attributes)\n extent      : 5.74414, 6.528252, 49.44781, 50.18162  (xmin, xmax, ymin, ymax)\n source      : lux.shp\n coord. ref. : lon/lat WGS 84 (EPSG:4326) \n names       :  ID_1   NAME_1  ID_2   NAME_2  AREA   POP\n type        : <num>    <chr> <num>    <chr> <num> <int>\n values      :     1 Diekirch     1 Clervaux   312 18081\n                   1 Diekirch     2 Diekirch   218 32543\n                   1 Diekirch     3  Redange   259 18664\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(raster_file)\nlines(vector_file)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/terra-plot-lines-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(brolgar)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(naniar)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'naniar'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:terra':\n\n    shade\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visdat)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract() masks terra::extract()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvis_miss(airquality)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visdat-naniar-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngg_miss_var(airquality)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visdat-naniar-2.png){width=672}\n:::\n\n```{.r .cell-code}\ngg_miss_upset(airquality)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/visdat-naniar-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(heights,\n       aes(x = year,\n           y = height_cm,\n           group = country)) + \n    geom_line()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-heights-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(heights,\n       aes(x = year,\n           y = height_cm,\n           group = country)) + \n    geom_line() +\n    facet_strata(along = -height_cm)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-heights-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}